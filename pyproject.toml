[tool.poetry]
name = "cdisc-generators"
version = "0.1.0"
description = "Generate CRFs from CDISC Library"
authors = ["You <you@example.com>"]
license = "MIT"
readme = "README.md"
packages = [
    { include = "cdisc_data_symphony", from = "src" },
    { include = "cdisc_library_client", from = "src" }
]

[tool.poetry.dependencies]
python = ">=3.11,<4.0"
openapi-python-client = "^0.25"
jinja2 = "^3.1"
pydantic = "^2.7"
pydantic-settings = "^2.3.4"
requests = "^2.32"
pandas = "^2.2"
openpyxl = "^3.1"
python-docx = "^1.1"
odmlib = "^0.1.4"
httpx = "^0.23.0"
docx2pdf = "^0.1.8"
pypandoc = "^1.11"
matplotlib = "^3.8.4"
python-dotenv = "^1.1.1"
pyyaml = "^6.0"
httpx-cache = "^0.13.0"
tenacity = "^8.2.3"
typer = {extras = ["all"], version = "^0.16.1"}
fastapi = "^0.116.1"
uvicorn = "^0.35.0"

[tool.poetry.group.dev.dependencies]
black = "^25.1.0"
ruff = "^0.12.9"
pytest = "^8.0"
pytest-cov = "^6.3"
pre-commit = "^4.0"
isort = "^5.12.0"
pytest-mock = "^3.12.0"
pytest-asyncio = "^1.1.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"
skip = ["src/clients/cdisc_library_client"]

[tool.poetry.scripts]
cdisc = "cdisc_data_symphony.cli.main:app"
update-issue-links = "scripts.update_issue_links:main"
generate-diagram = "scripts.diagram:main"
read-excel = "scripts.read_excel:main"
build-canonical = "scripts.build_canonical:main"
build = "scripts.build:main"

[tool.pytest.ini_options]
pythonpath = [
  "src"
]
